@inject FreeAITherapist AITherapist

<script defer src="/js/ChatBox.js"></script>

<div id="chatbox-button" role="button" onclick="ChatBox.openOrCloseChatbox(event)" data-target="#chatbox-body">
    <div class="button"></div>
</div>

<div id="chatbox-body">
    <div id="chatbox-content" @ref="_chatboxDiv">
        <div class="ai-message">Enter any thoughts here and I will respond!</div>
    </div>
    <div id="chatbox-input-container">
        <input id="chatbox-input" type="text" @bind-value="Message">
        <div id="chatbox-send" data-target="chatbox-input" @onclick="SendMessage"></div>
    </div>
</div>

@code {
    public string Message = String.Empty;
    private ElementReference _chatboxDiv;

    protected async Task SendMessage() {
        if (string.IsNullOrEmpty(Message)) return;

        await AddChatBubble(Message, true);
        
        string response = await AITherapist.Converse(Message);
        await AddChatBubble(response, false);
    }

    protected async Task AddChatBubble(string chatMessage, bool isHuman) {
        await JS.InvokeVoidAsync("ChatBox.addMessage", _chatboxDiv, chatMessage, isHuman);
    }
    
    [Inject] private IJSRuntime JS { get; set; } = default!;
}